{"ast":null,"code":"var _jsxFileName = \"/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChats, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState([]);\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch(\"http://localhost:8000/completions\", options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => {\n        [...prevChats, {\n          title: currentTitle,\n          role: \"user\",\n          content: value\n        }, {\n          title: currentTitle,\n          role: message.role,\n          content: message.content\n        }];\n      });\n    }\n  }, [message, currentTitle]);\n  console.log(previousChats);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"history\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Made by Ishan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IshanGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"info\",\n          children: \"Mock ChatGPT using openAI API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WlBs43lzLGqU5KhF+79x50xfENg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","log","prevChats","title","role","content","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","id","onClick","_c","$RefreshReg$"],"sources":["/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\n\n\nconst App = ()  => {\n\n  const [ value, setValue] = useState(null)\n  const [ message, setMessage ] = useState(null)\n  const [ previousChats, setPreviousChats] = useState([])\n  const [ currentTitle, setCurrentTitle] = useState([])\n\n  const getMessages = async () => {\n    \n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    \n    \n    try{\n      const response = await fetch(\"http://localhost:8000/completions\", options)\n      const data = await response.json()\n      setMessage(data.choices[0].message)\n    }catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() =>{\n    console.log(currentTitle, value, message)\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value)\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => {\n          [...prevChats, \n            {\n              title: currentTitle,\n              role: \"user\",\n              content: value\n            }, \n          \n            {\n              title: currentTitle,\n              role: message.role,\n              content: message.content\n\n            }\n         ]\n      })\n    }\n  }, [message, currentTitle])\n\n  console.log(previousChats)\n\n  return (\n    <div className=\"app\">\n      <section class=\"side-bar\">\n        <button>+ New Chat</button>\n        <ul class=\"history\">\n          <li>\n            hello\n          </li>\n        </ul>\n        <nav>\n          <p>Made by Ishan</p>\n        </nav>\n      </section>\n      <section class=\"main\">\n        {!currentTitle && <h1>IshanGPT</h1>}\n        <ul className=\"feed\">\n\n        </ul>\n        <div class=\"bottom-section\">\n          <div class=\"input-container\">\n            <input value={value} onChange={(e) => setValue(e.target.value)}/>\n            <div id=\"submit\" onClick={getMessages}>âž¢</div>\n          </div>\n          <p class=\"info\">\n            Mock ChatGPT using openAI API\n          </p>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App; \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}