{"ast":null,"code":"var _jsxFileName = \"/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: \"hello how are you?\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch(\"http://localhost:8000/completions\", options);\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"history\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Made by Ishan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IshanGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"info\",\n          children: \"Mock ChatGPT using openAI API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","getMessages","options","method","body","JSON","stringify","message","headers","response","fetch","data","json","console","log","error","_jsxDEV","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js"],"sourcesContent":["\n\n\n\nconst App = ()  => {\n\n  const getMessages = async () => {\n    \n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: \"hello how are you?\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    \n    \n    try{\n      const response = await fetch(\"http://localhost:8000/completions\", options)\n      const data = await response.json()\n      console.log(data)\n    }catch (error) {\n      console.error(error)\n    }\n  }\n\n\n  return (\n    <div className=\"app\">\n      <section class=\"side-bar\">\n        <button>+ New Chat</button>\n        <ul class=\"history\">\n          <li>\n            hello\n          </li>\n        </ul>\n        <nav>\n          <p>Made by Ishan</p>\n        </nav>\n      </section>\n      <section class=\"main\">\n        <h1>IshanGPT</h1>\n        <ul className=\"feed\">\n\n        </ul>\n        <div class=\"bottom-section\">\n          <div class=\"input-container\">\n            <input/>\n            <div id=\"submit\" onClick={getMessages}>âž¢</div>\n          </div>\n          <p class=\"info\">\n            Mock ChatGPT using openAI API\n          </p>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App; \n"],"mappings":";;AAIA,MAAMA,GAAG,GAAGA,CAAA,KAAO;EAEjB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE9B,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC;MACFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAGD,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAER,OAAO,CAAC;MAC1E,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,QAAOI,KAAK,EAAE;MACbF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,oBACEC,OAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBF,OAAA;MAASG,KAAK,EAAC,UAAU;MAAAD,QAAA,gBACvBF,OAAA;QAAAE,QAAA,EAAQ;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3BP,OAAA;QAAIG,KAAK,EAAC,SAAS;QAAAD,QAAA,eACjBF,OAAA;UAAAE,QAAA,EAAI;QAEJ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACLP,OAAA;QAAAE,QAAA,eACEF,OAAA;UAAAE,QAAA,EAAG;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACVP,OAAA;MAASG,KAAK,EAAC,MAAM;MAAAD,QAAA,gBACnBF,OAAA;QAAAE,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBP,OAAA;QAAIC,SAAS,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CAAC,eACLP,OAAA;QAAKG,KAAK,EAAC,gBAAgB;QAAAD,QAAA,gBACzBF,OAAA;UAAKG,KAAK,EAAC,iBAAiB;UAAAD,QAAA,gBAC1BF,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRP,OAAA;YAAKQ,EAAE,EAAC,QAAQ;YAACC,OAAO,EAAExB,WAAY;YAAAiB,QAAA,EAAC;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACNP,OAAA;UAAGG,KAAK,EAAC,MAAM;UAAAD,QAAA,EAAC;QAEhB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEV,CAAC;AAAAG,EAAA,GAxDK1B,GAAG;AA0DT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}