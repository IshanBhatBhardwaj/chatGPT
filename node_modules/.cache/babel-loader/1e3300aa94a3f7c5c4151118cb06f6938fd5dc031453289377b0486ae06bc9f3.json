{"ast":null,"code":"var _jsxFileName = \"/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChats, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n  const createNewChat = () => {\n    setMessage(null);\n    setValue(\"\");\n    setCurrentTitle(null);\n  };\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch(\"http://localhost:8000/completions\", options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => [...prevChats, {\n        title: currentTitle,\n        role: \"user\",\n        content: value\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message, currentTitle]);\n  console.log(previousChats);\n  const currentChat = previousChats.filter(previousChats => previousChats.title === currentTitle);\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChats => previousChats.title)));\n  console.log(uniqueTitles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewChat,\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"history\",\n        children: uniqueTitles === null || uniqueTitles === void 0 ? void 0 : uniqueTitles.map((uniqueTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: uniqueTitle\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Made by Ishan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IshanGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"role\",\n            children: chatMessage.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: chatMessage.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"info\",\n          children: \"Mock ChatGPT using openAI API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YK757xtCNQtaZPTpS9ExwGnYLmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","createNewChat","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","log","prevChats","title","role","content","currentChat","filter","uniqueTitles","Array","from","Set","map","className","children","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","uniqueTitle","index","chatMessage","onChange","e","target","id","_c","$RefreshReg$"],"sources":["/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\n\n\nconst App = ()  => {\n\n  const [ value, setValue] = useState(null)\n  const [ message, setMessage ] = useState(null)\n  const [ previousChats, setPreviousChats] = useState([])\n  const [ currentTitle, setCurrentTitle] = useState(null)\n\n  const createNewChat = () => {\n    setMessage(null)\n    setValue(\"\")\n    setCurrentTitle(null)\n  }\n\n\n  const getMessages = async () => {\n    \n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    \n    \n    try{\n      const response = await fetch(\"http://localhost:8000/completions\", options)\n      const data = await response.json()\n      setMessage(data.choices[0].message)\n    }catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() =>{\n    console.log(currentTitle, value, message)\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value)\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => (\n          [...prevChats, \n            {\n              title: currentTitle,\n              role: \"user\",\n              content: value\n            }, \n          \n            {\n              title: currentTitle,\n              role : message.role,\n              content: message.content\n\n            }\n         ]\n      ))\n    }\n  }, [message, currentTitle])\n\n  console.log(previousChats)\n\n  const currentChat = previousChats.filter(previousChats => previousChats.title === currentTitle)\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChats => previousChats.title)))\n  console.log(uniqueTitles)\n  return (\n    <div className=\"app\">\n      <section class=\"side-bar\">\n        <button onClick={createNewChat}>+ New Chat</button>\n        <ul class=\"history\">\n          { uniqueTitles?.map((uniqueTitle, index) => <li key={index}>{uniqueTitle}</li>)}\n        </ul>\n        <nav>\n          <p>Made by Ishan</p>\n        </nav>\n      </section>\n      <section class=\"main\">\n        {!currentTitle && <h1>IshanGPT</h1>}\n        <ul className=\"feed\">\n            {currentChat?.map((chatMessage, index) => <li key={index}> \n              <p className=\"role\">{chatMessage.role}</p>\n              <p>{chatMessage.message}</p>\n            </li>)}\n\n        </ul>\n        <div class=\"bottom-section\">\n          <div class=\"input-container\">\n            <input value={value} onChange={(e) => setValue(e.target.value)}/>\n            <div id=\"submit\" onClick={getMessages}>âž¢</div>\n          </div>\n          <p class=\"info\">\n            Mock ChatGPT using openAI API\n          </p>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App; \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}