[{"/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/index.js":"1","/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js":"2"},{"size":255,"mtime":1686878239785,"results":"3","hashOfConfig":"4"},{"size":2882,"mtime":1686886849647,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r7vegt",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/index.js",[],[],"/Users/ishanbhardwaj/Desktop/GPT-clone/gpt-clone-app/src/App.js",["13"],[],"import { useState, useEffect } from \"react\"\n\n\n\nconst App = ()  => {\n\n  const [ value, setValue] = useState(null)\n  const [ message, setMessage ] = useState(null)\n  const [ previousChats, setPreviousChats] = useState([])\n  const [ currentTitle, setCurrentTitle] = useState(null)\n\n  const createNewChat = () => {\n    setMessage(null)\n    setValue(\"\")\n    setCurrentTitle(null)\n  }\n\n  const handleClick = (uniqueTitle) => {\n    setCurrentTitle(uniqueTitle)\n    setMessage(null)\n    setValue(\"\")\n  }\n\n\n  const getMessages = async () => {\n    \n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    \n    \n    try{\n      const response = await fetch(\"http://localhost:8000/completions\", options)\n      const data = await response.json()\n      setMessage(data.choices[0].message)\n    }catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() =>{\n    console.log(currentTitle, value, message)\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value)\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(prevChats => (\n          [...prevChats, \n            {\n              title: currentTitle,\n              role: \"user\",\n              content: value\n            }, \n          \n            {\n              title: currentTitle,\n              role : message.role,\n              content: message.content\n            }\n         ]\n      ))\n    }\n  }, [message, currentTitle])\n\n  console.log(previousChats)\n\n  const currentChat = previousChats.filter(previousChats => previousChats.title === currentTitle)\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChats => previousChats.title)))\n  console.log(uniqueTitles)\n  return (\n    <div className=\"app\">\n      <section class=\"side-bar\">\n        <button onClick={createNewChat}>+ New Chat</button>\n        <ul class=\"history\">\n          { uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={ () => handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n\n        </ul>\n        <nav>\n          <p>Made by Ishan</p>\n        </nav>\n      </section>\n      <section class=\"main\">\n        {!currentTitle && <h1>IshanGPT</h1>}\n        <ul className=\"feed\">\n            {currentChat?.map((chatMessage, index) => <li key={index}> \n              <p className=\"role\">{chatMessage.role}</p>\n              <p>{chatMessage.content}</p>\n            </li>)}\n\n        </ul>\n        <div class=\"bottom-section\">\n          <div class=\"input-container\">\n            <input value={value} onChange={(e) => setValue(e.target.value)}/>\n            <div id=\"submit\" onClick={getMessages}>âž¢</div>\n          </div>\n          <p class=\"info\">\n            Mock ChatGPT using openAI API\n          </p>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App; \n",{"ruleId":"14","severity":1,"message":"15","line":69,"column":6,"nodeType":"16","endLine":69,"endColumn":29,"suggestions":"17"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentTitle' needs the current value of 'value'.","ArrayExpression",["18"],{"desc":"19","fix":"20"},"Update the dependencies array to be: [message, currentTitle, value]",{"range":"21","text":"22"},[1515,1538],"[message, currentTitle, value]"]